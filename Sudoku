import numpy as np

class State:
    def __init__(self, board):
        self.board = board
        self.rows = np.shape(board)[0]
        self.columns = np.shape(board)[1]

    def is_valid(self):
        pass

    def row_valid(self, index):
        list = []
        for i in range(self.rows):
            list.append(self.board[i][index])
        return self.has_duplicates(list)

    def column_valid(self, index):
        list = []
        for i in range(self.columns):
            list.append(self.board[index][i])
        return self.has_duplicates(list)

    def box_valid(self, row, col):
        list = []
        (n, m) = self.covert_box(row,col)
        for i in range(n, n+2):
            for j in range(m, m+2):
                 list.append(self.board[i][j])

        return self.has_duplicates(list)

    def __str__(self):
        s = ""
        for i in range(self.rows):
            for j in range(self.columns):
                #if i == 3 or i == 6:
                    #s = s + "|"
                s = s + " [" + str(self.board[i][j]) + "]"
            s = s + "\n"

        return s

    def has_duplicates(self, list):
        # list is an array w/ 9 numbers
        dictionary = {}
        for i in list:
            if i != 0:
                if i not in dictionary:
                    dictionary[i] = 1
                else:
                    dictionary[i] = dictionary[i] + 1
                if dictionary[i] > 1:
                    return False
        return True

    def convert_box(self, row, col):
        if row == 0:
            n = 0
        elif row == 1:
            n = 3
        elif row == 2:
            n = 6
        if col == 0:
            m = 0
        elif col == 1:
            m = 3
        elif col == 2:
            m = 6
        return (n, m)
    
    def copy(self):
        return State(self.board)
        #check that this is passing as a new board
        #otherwise create a new array & then repass

#then we turn it into a graph
#and then we go through each path until it's not valid
#go through a new path

from state import State
# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    print('PyCharm')

test_sudoku = [[1,0,4,3,8,2,9,5,6], [2, 0, 5, 4, 6, 7, 1, 3, 8],[3, 8, 6, 9, 5, 1, 4, 0, 2],[4, 6, 1, 5, 2, 3, 8, 9, 7],[7, 3, 8, 1, 4, 9, 6, 2, 5],[9, 5, 2, 8, 7, 6, 3, 1, 4],[5, 2, 9, 6, 3, 4, 7, 8, 1],[6, 0, 7, 2, 9, 8, 5, 4, 3],[8, 4,3,0,1,5,2,6,9]]
board = State(test_sudoku)
print(board.row_valid(1))
print(str(board))
